(function(){var e={9261:function(e,t,a){"use strict";var r=a(5471),s=a(5668),n=function(){var e=this,t=e._self._c;return t(s.A,[t("router-view")],1)},o=[],c={name:"App"},u=c,d=a(1656),i=(0,d.A)(u,n,o,!1,null,null,null),l=i.exports,E=a(8197),R=a(1153),m=a(3971);r.Ay.use(m.A);var S=new m.A({theme:{themes:{light:{brown:"#a52a2a",firebrick:"#b22222",chocolate:"#d2691e",sandybrown:"#f4a460",tan:"#d2b48c",primary:"#a52a2a",secondary:"#b22222",accent:"#d2691e",info:"#f4a460",warning:"#d2b48c"}},options:{customProperties:!0}},icons:{iconfont:"mdi"}}),T=a(7588),h=a.n(T);r.Ay.config.productionTip=!1,r.Ay.use(h()),r.Ay.component("apexchart",h()),r.Ay.filter("capitalize",(function(e){return e?e.charAt(0).toUpperCase()+e.slice(1).toLowerCase():""})),new r.Ay({router:E.A,store:R.A,vuetify:S,render:e=>e(l)}).$mount("#app")},8197:function(e,t,a){"use strict";var r=a(5471),s=a(173),n=a(1153);r.Ay.use(s.Ay);const o=[{path:"login",name:"Login",component:()=>Promise.all([a.e(171),a.e(380),a.e(330)]).then(a.bind(a,6330)),meta:{guest:!0}}],c=[{path:"",redirect:"dashboard",meta:{requiresAuth:!0}},{path:"dashboard",name:"Dashboard",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(995),a.e(93),a.e(27)]).then(a.bind(a,1323)),meta:{requiresAuth:!0}},{path:"memberships",name:"memberships",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(60)]).then(a.bind(a,6994)),meta:{requiresAuth:!0}},{path:"consumers",name:"consumers",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(896),a.e(270),a.e(445)]).then(a.bind(a,4445)),meta:{requiresAuth:!0}},{path:"consumer/:id/:action(add|edit|view)",name:"Consumer Profile",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(896),a.e(832),a.e(922)]).then(a.bind(a,1865)),meta:{requiresAuth:!0}},{path:"billings",name:"billings",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(93),a.e(11)]).then(a.bind(a,7390)),meta:{requiresAuth:!0}},{path:"billings/:id/:action(add|edit|view)",name:"Billing Form",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(896),a.e(93),a.e(431)]).then(a.bind(a,250)),meta:{requiresAuth:!0}},{path:"collections",name:"collections",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(93),a.e(302)]).then(a.bind(a,5315)),meta:{requiresAuth:!0}},{path:"expenses",name:"expenses",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(896),a.e(93),a.e(355),a.e(634)]).then(a.bind(a,3634)),meta:{requiresAuth:!0}},{path:"settings",name:"settings",component:()=>a.e(166).then(a.bind(a,7166)),meta:{requiresAuth:!0}},{path:"users",name:"users",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(896),a.e(763)]).then(a.bind(a,7743)),meta:{requiresAuth:!0}},{path:"user-roles",name:"roles",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(896),a.e(270),a.e(398)]).then(a.bind(a,398)),meta:{requiresAuth:!0}},{path:"reports",component:()=>Promise.all([a.e(171),a.e(380),a.e(147),a.e(237),a.e(312),a.e(451),a.e(995),a.e(896),a.e(355),a.e(414)]).then(a.bind(a,6414)),meta:{requiresAuth:!0},children:[{path:"",name:"Reports",meta:{requiresAuth:!0}}]}],u=[{path:"/",component:()=>a.e(889).then(a.bind(a,1889)),children:o},{path:"/admin",component:()=>Promise.all([a.e(171),a.e(147),a.e(237),a.e(451),a.e(832),a.e(206)]).then(a.bind(a,894)),meta:{requiresAuth:!0},children:c},{path:"*",name:"404",component:()=>Promise.all([a.e(171),a.e(556)]).then(a.bind(a,5556))}],d=new s.Ay({mode:"history",base:"/",routes:u,scrollBehavior(e,t,a){return a||{x:0,y:0}}});d.beforeEach(((e,t,a)=>{const r=e.matched.some((e=>e.meta.requiresAuth)),s=n.A.getters["users/isAuthenticated"];"/"===e.path&&s?a("/admin/dashboard"):r&&!s?a("/login"):"/login"===e.path&&s?a("/admin/dashboard"):a()})),t.A=d},1988:function(e,t,a){"use strict";a(4114);var r=a(4335),s=a(1153),n=a(8197);const o="/api/v1",c=r.A.create({baseURL:o});c.interceptors.request.use((e=>{const t=s.A.getters["users/getToken"];return t&&(e.headers.Authorization=`Bearer ${t}`),e}),(e=>Promise.reject(e))),c.interceptors.response.use((e=>e),(e=>(401===e.response.status&&(s.A.dispatch("users/logout"),n.A.push("/login")),Promise.reject(e)))),t.A=c},1153:function(e,t,a){"use strict";var r=a(5471),s=a(5353);r.Ay.use(s.Ay);const n=a(8043),o=n.keys().reduce(((e,t)=>{const a=t.replace(/^\.\/(.*)\.\w+$/,"$1"),r=n(t).default||n(t);return e[a]=r,e}),{});t.A=new s.Ay.Store({modules:o})},5554:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return o}});a(4114);var r=a(1988),s={login(e){return r.A.post("/auth/login",e)},register(e){return r.A.post("/user",e)},getCurrentUser(){return r.A.get("/auth/me")},verifyToken(){return axios.get("auth/verify-token",{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}})}},n=a(8197),o={namespaced:!0,state:{token:localStorage.getItem("token")||null,user:null,loading:!1,error:null},getters:{isAuthenticated:e=>!!e.token,user:e=>e.user,loading:e=>e.loading,error:e=>e.error},mutations:{SET_TOKEN(e,t){e.token=t},SET_USER(e,t){e.user=t},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_AUTH(e){e.token=null,e.user=null,e.error=null}},actions:{async login({commit:e},t){try{e("SET_LOADING",!0);const a=await s.login(t),{token:r,user:o}=a.data.data;localStorage.setItem("token",r),localStorage.setItem("user",JSON.stringify(o)),e("SET_TOKEN",r),e("SET_USER",o),n.A.push("/admin/dashboard")}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Login failed"),a}finally{e("SET_LOADING",!1)}},async verifyUser({commit:e,state:t}){if(t.token)try{e("SET_LOADING",!0);const t=await s.verifyToken();console.log({response:t}),e("SET_USER",t.data.user)}catch(a){e("CLEAR_AUTH"),n.A.push("/login")}finally{e("SET_LOADING",!1)}},logout({commit:e}){localStorage.removeItem("token"),localStorage.removeItem("user"),e("CLEAR_AUTH"),n.A.push("/login")}}}},1674:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getCourses(){return r.A.get("/course")},getCourse(e){return r.A.get(`/course/${e}`)},createCourse(e){return r.A.post("/course",e)},updateCourse(e,t){return r.A.patch(`/course/${e}`,t)},deleteCourse(e){return r.A.delete(`/course/${e}`)}},n={namespaced:!0,state:{courses:[],currentCourse:null,loading:!1,error:null},getters:{courses:e=>e.courses,currentCourse:e=>e.currentCourse,loading:e=>e.loading,error:e=>e.error},mutations:{SET_COURSES(e,t){e.courses=t},SET_CURRENT_COURSE(e,t){e.currentCourse=t},ADD_COURSE(e,t){e.courses.push(t)},UPDATE_COURSE(e,t){const a=e.courses.findIndex((e=>e._id===t._id));-1!==a&&e.courses.splice(a,1,t)},REMOVE_COURSE(e,t){e.courses=e.courses.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchCourses({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getCourses();console.log(t),e("SET_COURSES",t.data.data.courses)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch courses"),t}finally{e("SET_LOADING",!1)}},async fetchCourse({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getCourse(t);e("SET_CURRENT_COURSE",a.data.data.course)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch course"),a}finally{e("SET_LOADING",!1)}},async fetchCourseByName({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getCourseByName(t);e("SET_CURRENT_COURSE",a.data.data.course)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch course"),a}finally{e("SET_LOADING",!1)}},async createCourse({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createCourse(t);return e("ADD_COURSE",a.data.data.course),a.data.data.course}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create course"),a}finally{e("SET_LOADING",!1)}},async updateCourse({commit:e},{id:t,courseData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateCourse(t,a);return e("UPDATE_COURSE",r.data.data.course),r.data.data.course}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update course"),r}finally{e("SET_LOADING",!1)}},async deleteCourse({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteCourse(t),e("REMOVE_COURSE",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete course"),a}finally{e("SET_LOADING",!1)}}}}},7824:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});var r=a(1988),s={getDashboardStats(){return r.A.get("/dashboard/stats")},getDocumentTimeline(e){return r.A.get(`/dashboard/timeline/${e}`)},getDocumentRequests(e){return r.A.get("/dashboard/requests",{params:e})}},n={namespaced:!0,state:{stats:{documentStats:{},priorityStats:{},requestStats:{},recentActivities:[]},documentTimeline:{document:null,timeline:[]},documentRequests:{requests:[],pagination:{currentPage:1,totalPages:1,totalItems:0},statusCounts:{}},loading:!1,error:null},getters:{stats:e=>e.stats,documentTimeline:e=>e.documentTimeline,documentRequests:e=>e.documentRequests,loading:e=>e.loading,error:e=>e.error},mutations:{SET_STATS(e,t){e.stats=t},SET_DOCUMENT_TIMELINE(e,t){e.documentTimeline=t},SET_DOCUMENT_REQUESTS(e,t){e.documentRequests=t},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchDashboardStats({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getDashboardStats();e("SET_STATS",t.data)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch dashboard statistics"),t}finally{e("SET_LOADING",!1)}},async fetchDocumentTimeline({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getDocumentTimeline(t);e("SET_DOCUMENT_TIMELINE",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch document timeline"),a}finally{e("SET_LOADING",!1)}},async fetchDocumentRequests({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getDocumentRequests(t);e("SET_DOCUMENT_REQUESTS",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch document requests"),a}finally{e("SET_LOADING",!1)}}}}},7990:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getDepartments(){return r.A.get("/department")},getDepartment(e){return r.A.get(`/department/${e}`)},createDepartment(e){return r.A.post("/department",e)},updateDepartment(e,t){return r.A.patch(`/department/${e}`,t)},deleteDepartment(e){return r.A.delete(`/department/${e}`)}},n={namespaced:!0,state:{departments:[],currentDepartment:null,loading:!1,error:null},getters:{departments:e=>e.departments,currentDepartment:e=>e.currentDepartment,loading:e=>e.loading,error:e=>e.error},mutations:{SET_DEPARTMENTS(e,t){e.departments=t},SET_CURRENT_DEPARTMENT(e,t){e.currentDepartment=t},ADD_DEPARTMENT(e,t){e.departments.push(t)},UPDATE_DEPARTMENT(e,t){const a=e.departments.findIndex((e=>e._id===t._id));-1!==a&&e.departments.splice(a,1,t)},REMOVE_DEPARTMENT(e,t){e.departments=e.departments.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchDepartments({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getDepartments();e("SET_DEPARTMENTS",t.data)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch departments"),t}finally{e("SET_LOADING",!1)}},async fetchDepartment({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getDepartment(t);e("SET_CURRENT_DEPARTMENT",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch department"),a}finally{e("SET_LOADING",!1)}},async createDepartment({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createDepartment(t);return e("ADD_DEPARTMENT",a.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create department"),a}finally{e("SET_LOADING",!1)}},async updateDepartment({commit:e},{id:t,departmentData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateDepartment(t,a);return e("UPDATE_DEPARTMENT",r.data),r.data}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update department"),r}finally{e("SET_LOADING",!1)}},async deleteDepartment({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteDepartment(t),e("REMOVE_DEPARTMENT",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete department"),a}finally{e("SET_LOADING",!1)}}}}},8872:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});var r=a(1988),s={getDocumentRequests(e){return r.A.get("/document-request",{params:e})},getDocumentRequest(e){return r.A.get(`/document-request/${e}`)},createDocumentRequest(e){return r.A.post("/document-request",e)},updateDocumentRequestStatus(e,t){return r.A.patch(`/document-request/${e}/status`,t)},updateDocumentRequest(e,t){return r.A.put(`/document-request/${e}`,t)},deleteDocumentRequest(e){return r.A.delete(`/document-request/${e}`)}},n={namespaced:!0,state:{requests:[],currentRequest:null,loading:!1,error:null,pagination:{currentPage:1,totalPages:1,totalRequests:0}},getters:{requests:e=>e.requests,currentRequest:e=>e.currentRequest,loading:e=>e.loading,error:e=>e.error,pagination:e=>e.pagination},mutations:{SET_REQUESTS(e,t){e.requests=t},SET_CURRENT_REQUEST(e,t){e.currentRequest=t},SET_PAGINATION(e,t){e.pagination=t},ADD_REQUEST(e,t){e.requests.unshift(t)},UPDATE_REQUEST(e,t){const a=e.requests.findIndex((e=>e.trackingNumber===t.trackingNumber));-1!==a&&e.requests.splice(a,1,t)},REMOVE_REQUEST(e,t){e.requests=e.requests.filter((e=>e.trackingNumber!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchRequests({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getDocumentRequests(t);e("SET_REQUESTS",a.data.requests),e("SET_PAGINATION",{currentPage:a.data.currentPage,totalPages:a.data.totalPages,totalRequests:a.data.totalRequests})}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch requests"),a}finally{e("SET_LOADING",!1)}},async fetchRequest({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getDocumentRequest(t);e("SET_CURRENT_REQUEST",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch request"),a}finally{e("SET_LOADING",!1)}},async createRequest({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createDocumentRequest(t);return e("ADD_REQUEST",a.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create request"),a}finally{e("SET_LOADING",!1)}},async updateRequestStatus({commit:e},{trackingNumber:t,statusData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateDocumentRequestStatus(t,a);return e("UPDATE_REQUEST",r.data),r.data}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update request status"),r}finally{e("SET_LOADING",!1)}},async deleteRequest({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteDocumentRequest(t),e("REMOVE_REQUEST",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete request"),a}finally{e("SET_LOADING",!1)}}}}},8543:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getDocuments(){return r.A.get("/document/documents")},getDocument(e){return r.A.get(`/document/documents/${e}`)},createDocument(e){const t=new FormData;return t.append("documents",JSON.stringify(e.documents)),t.append("tracking",JSON.stringify(e.tracking[0])),e.tracking[0].documents.attachments&&e.tracking[0].documents.attachments.forEach(((a,r)=>{const s=e.newDocument.attachments[r];t.append("attachments",s)})),r.A.post("/document/documents",t,{headers:{"Content-Type":"multipart/form-data"}})},addTracking(e){const t=e.documentId,a=e.trackingData,s=new FormData;return s.append("fromDepartment",a.fromDepartment),s.append("toDepartment",a.toDepartment),s.append("sentBy",a.sentBy),s.append("status",a.status),s.append("comments",a.comments),a.attachments&&a.attachments.forEach((e=>{s.append("attachments",e)})),r.A.post(`/document/documents/${t}/tracking`,s,{headers:{"Content-Type":"multipart/form-data"}})},updateTracking(e,t,a){return r.A.patch(`/document/documents/${e}/tracking/${t}`,a)}},n={namespaced:!0,state:{documents:[],currentDocument:null,loading:!1,error:null},getters:{documents:e=>e.documents,currentDocument:e=>e.currentDocument,loading:e=>e.loading,error:e=>e.error},mutations:{SET_DOCUMENTS(e,t){e.documents=t},SET_CURRENT_DOCUMENT(e,t){e.currentDocument=t},ADD_DOCUMENT(e,t){e.documents.push(t)},UPDATE_DOCUMENT_STATUS(e,{documentId:t,status:a}){const r=e.documents.find((e=>e._id===t));r&&(r.status=a)},UPDATE_TRACKING(e,{documentId:t,trackingId:a,data:r}){const s=e.documents.find((e=>e._id===t));if(s&&s.tracking){const e=s.tracking.findIndex((e=>e._id===a));-1!==e&&(s.tracking[e]={...s.tracking[e],...r})}},ADD_TRACKING(e,{documentId:t,tracking:a}){const r=e.documents.find((e=>e._id===t));r&&(r.tracking||(r.tracking=[]),r.tracking.push(a))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchDocuments({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getDocuments();console.log({response:t}),e("SET_DOCUMENTS",t.data)}catch(t){throw e("SET_ERROR",t.response?.data?.error||"Failed to fetch documents"),t}finally{e("SET_LOADING",!1)}},async fetchDocument({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getDocument(t);e("SET_CURRENT_DOCUMENT",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.error||"Failed to fetch document"),a}finally{e("SET_LOADING",!1)}},async createDocument({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createDocument(t);return e("ADD_DOCUMENT",a.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.error||"Failed to create document"),a}finally{e("SET_LOADING",!1)}},async addTracking({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.addTracking(t);return e("ADD_TRACKING",{documentId:t.documentId,tracking:a.data}),e("UPDATE_DOCUMENT_STATUS",{documentId:t.documentId,status:a.data.status}),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.error||"Failed to add tracking"),a}finally{e("SET_LOADING",!1)}},async updateTracking({commit:e},{documentId:t,trackingId:a,trackingData:r}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const n=await s.updateTracking(t,a,r);return e("UPDATE_TRACKING",{documentId:t,trackingId:a,data:n.data}),n.data}catch(n){throw e("SET_ERROR",n.response?.data?.error||"Failed to update tracking"),n}finally{e("SET_LOADING",!1)}}}}},8954:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={enrollNewStudent(e){return r.A.post("/enrollment/new-student",e)},enrollContinuingStudent({studentId:e,enrollmentData:t}){return r.A.post(`/enrollment/continuing-student/${e}`,t)},addSubjects(e,t){return r.A.post(`/enrollment/${e}/subjects`,{subjects:t})},dropSubject(e,t){return r.A.patch(`/enrollment/${e}/subjects/${t}/drop`)},getStudentEnrollments(e){return r.A.get(`/enrollment/student/${e.studentId}`,{params:e.query})},getEnrollmentDetails(e){return r.A.get(`/enrollment/${e}`)},updateEnrollmentStatus(e){return r.A.patch(`/enrollment/${e}`)}},n={namespaced:!0,state:{enrollments:[],currentEnrollment:null,loading:!1,error:null},getters:{enrollments:e=>e.enrollments,currentEnrollment:e=>e.currentEnrollment,loading:e=>e.loading,error:e=>e.error},mutations:{SET_ENROLLMENTS(e,t){e.enrollments=t},SET_CURRENT_ENROLLMENT(e,t){e.currentEnrollment=t},ADD_ENROLLMENT(e,t){e.enrollments.push(t)},UPDATE_ENROLLMENT(e,t){const a=e.enrollments.findIndex((e=>e._id===t._id));-1!==a&&e.enrollments.splice(a,1,t)},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async enrollNewStudent({dispatch:e},{studentData:t,enrollmentData:a}){try{const e=await s.enrollNewStudent({studentData:t,enrollmentData:a});return e.data}catch(r){throw console.error("Error enrolling new student:",r),r}},async enrollContinuingStudent({dispatch:e},{studentId:t,enrollmentData:a}){console.log(t,a);try{const e=await s.enrollContinuingStudent({studentId:t,enrollmentData:a});return e.data}catch(r){throw console.error("Error enrolling continuing student:",r),r}},async fetchStudentEnrollments({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getStudentEnrollments(t);e("SET_CURRENT_ENROLLMENT",a.data.data.enrollments)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch enrollments"),a}finally{e("SET_LOADING",!1)}},async fetchEnrollmentDetails({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getEnrollmentDetails(t);e("SET_CURRENT_ENROLLMENT",a.data.data.enrollment)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch enrollment details"),a}finally{e("SET_LOADING",!1)}},async updateEnrollmentStatus({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.updateEnrollmentStatus(t);return e("SET_CURRENT_ENROLLMENT",a.data.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to update enrollment status"),a}finally{e("SET_LOADING",!1)}}}}},474:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getAllProfessors(){return r.A.get("/professor")},getProfessor(e){return r.A.get(`/professor/${e}`)},createProfessor(e){return r.A.post("/professor",e)},updateProfessor(e,t){return r.A.patch(`/professor/${e}`,t)},deleteProfessor(e){return r.A.delete(`/professor/${e}`)},getProfessorTeachingLoad(e){return r.A.get(`/professor/${e}/teaching-load`)}},n={namespaced:!0,state:{professors:[],currentProfessor:null,teachingLoad:null,totalProfessors:0,loading:!1,error:null},mutations:{SET_PROFESSORS(e,t){e.professors=t},SET_CURRENT_PROFESSOR(e,t){e.currentProfessor=t},SET_TEACHING_LOAD(e,t){e.teachingLoad=t},SET_TOTAL_PROFESSORS(e,t){e.totalProfessors=t},ADD_PROFESSOR(e,t){e.professors.push(t)},UPDATE_PROFESSOR(e,t){const a=e.professors.findIndex((e=>e._id===t._id));-1!==a&&e.professors.splice(a,1,t),e.currentProfessor?._id===t._id&&(e.currentProfessor=t)},REMOVE_PROFESSOR(e,t){e.professors=e.professors.filter((e=>e._id!==t)),e.currentProfessor?._id===t&&(e.currentProfessor=null)},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t}},actions:{async fetchProfessors({commit:e}){e("SET_LOADING",!0);try{const t=await s.getAllProfessors();e("SET_PROFESSORS",t.data.data.professors),e("SET_TOTAL_PROFESSORS",t.data.results)}catch(t){throw e("SET_ERROR",t.response?.data?.message),t}finally{e("SET_LOADING",!1)}},async fetchProfessor({commit:e},t){e("SET_LOADING",!0);try{const a=await s.getProfessor(t);return console.log(a),e("SET_CURRENT_PROFESSOR",a.data.data.professor),a.data.data.professor}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async fetchTeachingLoad({commit:e},t){e("SET_LOADING",!0);try{const a=await s.getProfessorTeachingLoad(t);return e("SET_TEACHING_LOAD",a.data.data.teachingLoad),a.data.data.teachingLoad}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async createProfessor({commit:e},t){e("SET_LOADING",!0);try{const a=await s.createProfessor(t);return e("ADD_PROFESSOR",a.data.data.professor),a.data.data.professor}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async updateProfessor({commit:e},{id:t,professorData:a}){e("SET_LOADING",!0);try{const r=await s.updateProfessor(t,a);return e("UPDATE_PROFESSOR",r.data.data.professor),r.data.data.professor}catch(r){throw e("SET_ERROR",r.response?.data?.message),r}finally{e("SET_LOADING",!1)}},async deleteProfessor({commit:e},t){e("SET_LOADING",!0);try{await s.deleteProfessor(t),e("REMOVE_PROFESSOR",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}}},getters:{getProfessorById:e=>t=>e.professors.find((e=>e._id===t)),getProfessorsByDepartment:e=>t=>e.professors.filter((e=>e.academicInfo.department===t)),getActiveFullTimeProfessors:e=>e.professors.filter((e=>"active"===e.accountStatus&&"full-time"===e.academicInfo.employmentStatus))}}},1892:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});var r=a(1988),s={getScheduleReports(e){return r.A.get("/report/class-schedules",{params:e})}},n={namespaced:!0,state:{scheduleReports:{data:[],total:0},loading:!1,error:null,filters:{course:null,subject:null,teacher:null,weekDay:null,startTime:null,endTime:null}},mutations:{SET_SCHEDULE_REPORTS(e,{schedules:t,total:a}){e.scheduleReports.data=t,e.scheduleReports.total=a},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},SET_FILTERS(e,t){e.filters={...e.filters,...t}},RESET_FILTERS(e){e.filters={course:null,subject:null,teacher:null,weekDay:null,startTime:null,endTime:null}}},actions:{async fetchScheduleReports({commit:e,state:t}){e("SET_LOADING",!0),e("SET_ERROR",null);try{const a={};t.filters.course&&(a.course=t.filters.course),t.filters.subject&&(a.subject=t.filters.subject),t.filters.teacher&&(a.teacher=t.filters.teacher._id||t.filters.teacher),t.filters.weekDay&&(a.weekDay=t.filters.weekDay),t.filters.startTime&&(a.startTime=t.filters.startTime),t.filters.endTime&&(a.endTime=t.filters.endTime);const r=await s.getScheduleReports(a);e("SET_SCHEDULE_REPORTS",{schedules:r.data.data.schedules,total:r.data.data.total})}catch(a){throw console.error("Report fetch error:",a),e("SET_ERROR",a.response?.data?.message||"Failed to fetch schedule reports"),a}finally{e("SET_LOADING",!1)}},updateFilters({commit:e,dispatch:t},a){const r={course:a.course,subject:a.subject,teacher:a.teacher?._id||a.teacher,weekDay:a.weekDay,startTime:a.startTime,endTime:a.endTime};return e("SET_FILTERS",r),t("fetchScheduleReports")},resetFilters({commit:e,dispatch:t}){return e("RESET_FILTERS"),t("fetchScheduleReports")}},getters:{getScheduleReports:e=>e.scheduleReports.data,getTotalReports:e=>e.scheduleReports.total,getLoading:e=>e.loading,getError:e=>e.error,getFilters:e=>e.filters}}},1426:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getRoles(){return r.A.get("/role")},getRole(e){return r.A.get(`/role/${e}`)},createRole(e){return r.A.post("/role",e)},updateRole(e,t){return r.A.put(`/role/${e}`,t)},deleteRole(e){return r.A.delete(`/role/${e}`)}},n={namespaced:!0,state:{roles:[],currentRole:null,loading:!1,error:null},getters:{roles:e=>e.roles,currentRole:e=>e.currentRole,loading:e=>e.loading,error:e=>e.error},mutations:{SET_ROLES(e,t){e.roles=t},SET_CURRENT_ROLE(e,t){e.currentRole=t},ADD_ROLE(e,t){e.roles.push(t)},UPDATE_ROLE(e,t){const a=e.roles.findIndex((e=>e._id===t._id));-1!==a&&e.roles.splice(a,1,t)},REMOVE_ROLE(e,t){e.roles=e.roles.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchRoles({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getRoles();e("SET_ROLES",t.data)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch roles"),t}finally{e("SET_LOADING",!1)}},async fetchRole({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getRole(t);e("SET_CURRENT_ROLE",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch role"),a}finally{e("SET_LOADING",!1)}},async createRole({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createRole(t);return e("ADD_ROLE",a.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create role"),a}finally{e("SET_LOADING",!1)}},async updateRole({commit:e},{id:t,roleData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateRole(t,a);return e("UPDATE_ROLE",r.data),r.data}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update role"),r}finally{e("SET_LOADING",!1)}},async deleteRole({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteRole(t),e("REMOVE_ROLE",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete role"),a}finally{e("SET_LOADING",!1)}}}}},1064:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getSchedules(){return r.A.get("/class-schedule")},getSchedule(e){return r.A.get(`/class-schedule/${e}`)},getTeacherSchedule(e){return r.A.get(`/class-schedule/teacher/${e}`)},createSchedule(e){return r.A.post("/class-schedule",e)},updateSchedule(e,t){return r.A.patch(`/class-schedule/${e}`,t)},deleteSchedule(e){return r.A.delete(`/class-schedule/${e}`)}},n={namespaced:!0,state:{schedules:[],totalSchedules:0,loading:!1,error:null,teacherSchedules:[],groupedSchedules:{}},mutations:{SET_SCHEDULES(e,t){e.schedules=t},SET_TOTAL_SCHEDULES(e,t){e.totalSchedules=t},SET_TEACHER_SCHEDULES(e,t){e.teacherSchedules=t.rawSchedules||[],e.groupedSchedules=t.groupedSchedules||{}},ADD_SCHEDULE(e,t){e.schedules.push(t)},UPDATE_SCHEDULE(e,t){const a=e.schedules.findIndex((e=>e._id===t._id));-1!==a&&e.schedules.splice(a,1,t)},REMOVE_SCHEDULE(e,t){e.schedules=e.schedules.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},RESET_STATE(e){e.teacherSchedules=[],e.groupedSchedules={},e.error=null}},actions:{async fetchSchedules({commit:e}){e("SET_LOADING",!0);try{const t=await s.getSchedules();e("SET_SCHEDULES",t.data.data.schedules),e("SET_TOTAL_SCHEDULES",t.data.results)}catch(t){throw e("SET_ERROR",t.response?.data?.message),t}finally{e("SET_LOADING",!1)}},async fetchTeacherSchedules({commit:e},t){e("SET_LOADING",!0),e("SET_ERROR",null);try{const a=await s.getTeacherSchedule(t);e("SET_TEACHER_SCHEDULES",a.data.data.schedule)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch schedules"),a}finally{e("SET_LOADING",!1)}},async createSchedule({commit:e},t){e("SET_LOADING",!0);try{const a=await s.createSchedule(t);return e("ADD_SCHEDULE",a.data.data.schedule),a.data.data.schedule}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async updateSchedule({commit:e},{id:t,scheduleData:a}){e("SET_LOADING",!0);try{const r=await s.updateSchedule(t,a);return e("UPDATE_SCHEDULE",r.data.data.schedule),r.data.data.schedule}catch(r){throw e("SET_ERROR",r.response?.data?.message),r}finally{e("SET_LOADING",!1)}},async deleteSchedule({commit:e},t){e("SET_LOADING",!0);try{await s.deleteSchedule(t),e("REMOVE_SCHEDULE",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}}},getters:{getSchedulesByDay:e=>t=>(console.log(t),e.groupedSchedules[t]||[]),hasSchedules:e=>e.teacherSchedules.length>0,isLoading:e=>e.loading,getError:e=>e.error}}},5958:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getStatuses(){return r.A.get("/status")},getStatus(e){return r.A.get(`/status/${e}`)},createStatus(e){return r.A.post("/status",e)},updateStatus(e,t){return r.A.put(`/status/${e}`,t)},deleteStatus(e){return r.A.delete(`/status/${e}`)}},n={namespaced:!0,state:{statuses:[],currentStatus:null,loading:!1,error:null},getters:{statuses:e=>e.statuses,currentStatus:e=>e.currentStatus,loading:e=>e.loading,error:e=>e.error},mutations:{SET_STATUSES(e,t){e.statuses=t},SET_CURRENT_STATUS(e,t){e.currentStatus=t},ADD_STATUS(e,t){e.statuses.push(t)},UPDATE_STATUS(e,t){const a=e.statuses.findIndex((e=>e._id===t._id));-1!==a&&e.statuses.splice(a,1,t)},REMOVE_STATUS(e,t){e.statuses=e.statuses.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchStatuses({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getStatuses();e("SET_STATUSES",t.data)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch statuses"),t}finally{e("SET_LOADING",!1)}},async fetchStatus({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getStatus(t);e("SET_CURRENT_STATUS",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch status"),a}finally{e("SET_LOADING",!1)}},async createStatus({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createStatus(t);return e("ADD_STATUS",a.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create status"),a}finally{e("SET_LOADING",!1)}},async updateStatus({commit:e},{id:t,statusData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateStatus(t,a);return e("UPDATE_STATUS",r.data),r.data}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update status"),r}finally{e("SET_LOADING",!1)}},async deleteStatus({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteStatus(t),e("REMOVE_STATUS",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete status"),a}finally{e("SET_LOADING",!1)}}}}},7061:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114),a(6573),a(8100),a(7936),a(7467),a(4732),a(9577),a(4979);var r=a(1988),s={createStudent(e){const t=new FormData;if(e.image&&e.image.startsWith("data:image")){const a=e.image.split(";base64,")[1],r=this.dataURLtoBlob(a);r&&t.append("image",r,"profile.jpg")}return Object.keys(e).forEach((a=>{"image"!==a&&("object"===typeof e[a]?t.append(a,JSON.stringify(e[a])):t.append(a,e[a]))})),r.A.post("/student",t,{headers:{"Content-Type":"multipart/form-data"}})},updateStudent(e,t){const a=new FormData;if(t.image&&t.image.startsWith("data:image")){const e=t.image.split(";base64,")[1],r=this.dataURLtoBlob(e);r&&a.append("image",r,"profile.jpg")}return Object.keys(t).forEach((e=>{"image"!==e&&("object"===typeof t[e]?a.append(e,JSON.stringify(t[e])):a.append(e,t[e]))})),r.A.patch(`/student/${e}`,a,{headers:{"Content-Type":"multipart/form-data"}})},getAllStudents(e){return r.A.get("/student")},getStudent(e){return r.A.get(`/student/${e}`)},dataURLtoBlob(e){if(!e||"string"!==typeof e)return null;try{const t=atob(e),a=new ArrayBuffer(t.length),r=new Uint8Array(a);for(let e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return new Blob([a],{type:"image/jpeg"})}catch(t){return console.error("Error converting data URL to blob:",t),null}}},n={namespaced:!0,state:{students:[],currentStudent:null,loading:!1,error:null},getters:{students:e=>e.students,currentStudent:e=>e.currentStudent,loading:e=>e.loading,error:e=>e.error},mutations:{SET_STUDENTS(e,t){console.log(t),e.students=t},SET_CURRENT_STUDENT(e,t){e.currentStudent=t},ADD_STUDENT(e,t){e.students.push(t)},UPDATE_STUDENT(e,t){const a=e.students.findIndex((e=>e._id===t._id));-1!==a&&e.students.splice(a,1,t)},REMOVE_STUDENT(e,t){e.students=e.students.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchStudents({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await s.getAllStudents();console.log(t),e("SET_STUDENTS",t.data.data.students)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch students"),t}finally{e("SET_LOADING",!1)}},async fetchStudent({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getStudent(t);console.log(a),e("SET_CURRENT_STUDENT",a.data.data.student)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch student"),a}finally{e("SET_LOADING",!1)}},async createStudent({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createStudent(t);return e("ADD_STUDENT",a.data.data.student),a.data.data.student}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create student"),a}finally{e("SET_LOADING",!1)}},async updateStudent({commit:e},{id:t,studentData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateStudent(t,a);return e("UPDATE_STUDENT",r.data.data.student),r.data.data.student}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update student"),r}finally{e("SET_LOADING",!1)}},async deleteStudent({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteStudent(t),e("REMOVE_STUDENT",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete student"),a}finally{e("SET_LOADING",!1)}}}}},8296:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getAllSubjects(e){return r.A.get("/subject",{params:e})},getSubject(e){return r.A.get(`/subject/${e}`)},createSubject(e){return r.A.post("/subject",e)},updateSubject(e,t){return r.A.patch(`/subject/${e}`,t)},deleteSubject(e){return r.A.delete(`/subject/${e}`)},getSubjectsByYearAndSemester(e,t){return r.A.get(`/subject/year/${e}/semester/${t}`)}},n={namespaced:!0,state:{subjects:[],currentSubject:null,loading:!1,error:null},getters:{subjects:e=>e.subjects,currentSubject:e=>e.currentSubject,loading:e=>e.loading,error:e=>e.error,subjectsByYear:e=>t=>e.subjects.filter((e=>e.yearLevel===t)),subjectsBySemester:e=>t=>e.subjects.filter((e=>e.semester===t)),subjectsByYearAndSemester:e=>(t,a)=>e.subjects.filter((e=>e.yearLevel===t&&e.semester===a))},mutations:{SET_SUBJECTS(e,t){e.subjects=t},SET_CURRENT_SUBJECT(e,t){e.currentSubject=t},ADD_SUBJECT(e,t){e.subjects.push(t)},UPDATE_SUBJECT(e,t){const a=e.subjects.findIndex((e=>e._id===t._id));-1!==a&&e.subjects.splice(a,1,t)},REMOVE_SUBJECT(e,t){e.subjects=e.subjects.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchSubjects({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getAllSubjects(t);return e("SET_SUBJECTS",a.data.data.subjects),a.data.data.subjects}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch subjects"),a}finally{e("SET_LOADING",!1)}},async fetchSubject({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getSubject(t);e("SET_CURRENT_SUBJECT",a.data.data.subject)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch subject"),a}finally{e("SET_LOADING",!1)}},async createSubject({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createSubject(t);return e("ADD_SUBJECT",a.data.data.subject),a.data.data.subject}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create subject"),a}finally{e("SET_LOADING",!1)}},async updateSubject({commit:e},{id:t,subjectData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateSubject(t,a);return e("UPDATE_SUBJECT",r.data.data.subject),r.data.data.subject}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update subject"),r}finally{e("SET_LOADING",!1)}},async deleteSubject({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteSubject(t),e("REMOVE_SUBJECT",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete subject"),a}finally{e("SET_LOADING",!1)}},async fetchSubjectsByYearAndSemester({commit:e},{yearLevel:t,semester:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.getSubjectsByYearAndSemester(t,a);e("SET_SUBJECTS",r.data.data.subjects)}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to fetch subjects by year and semester"),r}finally{e("SET_LOADING",!1)}}}}},662:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getAllTeacherLoads(e={}){return r.A.get("/teacher-load",{params:e})},getTeacherLoadsForProfessor(e){return r.A.get(`/teacher-load/professor/${e}`)},getTeacherLoad(e){return r.A.get(`/teacher-load/${e}`)},getStudentSchedule(e){return r.A.get("/teacher-load/student-schedule",{params:e})},fetchStudentSubjectGrade(e){return r.A.get("/teacher-load/student/grade",{params:e})},createTeacherLoad(e){return r.A.post("/teacher-load",e)},updateTeacherLoad(e,t){return r.A.patch(`/teacher-load/${e}`,t)},deleteTeacherLoad(e){return r.A.delete(`/teacher-load/${e}`)},checkConflictSchedule(e){if(!e.professorId)throw new Error("Professor ID is required");return r.A.post("/teacher-load/check-conflicts",e)},getAvailableSubjects(e,t){return r.A.get("/teacher-load/available-subjects",{params:{academicYear:e,semester:t}})},updateTeacherLoadStudents(e){return r.A.patch("/teacher-load/students",e)},updateStudentGrade(e){return r.A.patch("/teacher-load/student/grade",e)}},n={namespaced:!0,state:{teacherLoads:[],currentTeacherLoad:null,studentSchedule:null,loading:!1,error:null},mutations:{SET_TEACHER_LOADS(e,t){e.teacherLoads=t},SET_STUDENT_SCHEDULE(e,t){e.studentSchedule=t},SET_CURRENT_TEACHER_LOAD(e,t){e.currentTeacherLoad=t},ADD_TEACHER_LOAD(e,t){e.teacherLoads.push(t)},UPDATE_TEACHER_LOAD(e,t){const a=e.teacherLoads.findIndex((e=>e._id===t._id));-1!==a&&e.teacherLoads.splice(a,1,t)},REMOVE_TEACHER_LOAD(e,t){e.teacherLoads=e.teacherLoads.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t}},actions:{async fetchTeacherLoads({commit:e},t={}){e("SET_LOADING",!0);try{const a=await s.getAllTeacherLoads(t);return e("SET_TEACHER_LOADS",a.data.data.teacherLoads),a.data.data.teacherLoads}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch teacher loads"),a}finally{e("SET_LOADING",!1)}},async fetchProfessorTeacherLoads({commit:e},t){if(t){e("SET_LOADING",!0);try{const a=await s.getTeacherLoadsForProfessor(t);return e("SET_TEACHER_LOADS",a.data.data.teacherLoads),a.data.data.teacherLoads}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch professor teaching loads"),a}finally{e("SET_LOADING",!1)}}},async fetchTeacherLoad({commit:e},t){if(t){e("SET_LOADING",!0);try{const a=await s.getTeacherLoad(t);return e("SET_CURRENT_TEACHER_LOAD",a.data.data.teacherLoad),a.data.data.teacherLoad}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch teacher load"),a}finally{e("SET_LOADING",!1)}}},async fetchAvailableSubjects({commit:e},{academicYear:t,semester:a}){e("SET_LOADING",!0);try{const e=await s.getAvailableSubjects(t,a);return e.data.data.subjects}catch(r){throw e("SET_ERROR",r.response?.data?.message),r}finally{e("SET_LOADING",!1)}},async fetchStudentSubjectGrade({commit:e},t){e("SET_LOADING",!1);try{const e=await s.fetchStudentSubjectGrade(t);return console.log({grade:e.data}),e.data}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async fetchStudentSchedule({commit:e},t){e("SET_LOADING",!0);try{const a=await s.getStudentSchedule(t);return e("SET_STUDENT_SCHEDULE",a.data.data),a}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch student schedule"),a}finally{e("SET_LOADING",!1)}},async createTeacherLoad({commit:e},t){e("SET_LOADING",!0);try{const a=await s.createTeacherLoad(t);return e("ADD_TEACHER_LOAD",a.data.data.teacherLoad),a.data.data.teacherLoad}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create teacher load"),a}finally{e("SET_LOADING",!1)}},async updateTeacherLoad({commit:e},{id:t,data:a}){if(t){e("SET_LOADING",!0);try{const r=await s.updateTeacherLoad(t,a);return e("UPDATE_TEACHER_LOAD",r.data.data.teacherLoad),r.data.data.teacherLoad}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update teacher load"),r}finally{e("SET_LOADING",!1)}}},async updateTeacherLoadStudents({commit:e},t){try{const e=await s.updateTeacherLoadStudents(t);return e.data}catch(a){throw console.error("Error updating teacher load students:",a),a}},async updateStudentGrade({commit:e},t){try{const e=await s.updateStudentGrade(t);return e.data}catch(a){throw console.error("Error updating teacher load students:",a),a}},async deleteTeacherLoad({commit:e},t){if(t){e("SET_LOADING",!0);try{await s.deleteTeacherLoad(t),e("REMOVE_TEACHER_LOAD",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete teacher load"),a}finally{e("SET_LOADING",!1)}}},async checkScheduleConflicts({commit:e},{schedule:t,skipSubjectId:a,professorId:r}){e("SET_LOADING",!0);try{const e=await s.checkConflictSchedule({schedule:t,skipSubjectId:a,professorId:r});return e.data.data}catch(n){throw e("SET_ERROR",n.response?.data?.message||"Failed to check schedule conflicts"),n}finally{e("SET_LOADING",!1)}}},getters:{getStudentSchedule:e=>e.studentSchedule,getScheduleByDay:e=>t=>e.studentSchedule?.schedule?e.studentSchedule.schedule.filter((e=>e.schedule.day===t)):[],getTeacherLoadById:e=>t=>e.teacherLoads.find((e=>e._id===t)),getLoadsBySemester:e=>(t,a)=>e.teacherLoads.filter((e=>e.academicYear===t&&e.semester===a)),getTotalUnitsBySemester:e=>(t,a)=>e.teacherLoads.filter((e=>e.academicYear===t&&e.semester===a)).reduce(((e,t)=>e+(t.totalUnits||0)),0)}}},3891:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return n}});a(4114);var r=a(1988),s={getTrackings(e){return r.A.get(`/tracking/${e}`)},createTracking(e){const t=new FormData;return Object.keys(e).forEach((a=>{"attachments"!==a&&t.append(a,JSON.stringify(e[a]))})),e.attachments&&e.attachments.forEach((e=>{t.append("attachments",e)})),r.A.post("/tracking",t,{headers:{"Content-Type":"multipart/form-data"}})},updateTracking(e,t){return r.A.put(`/tracking/${e}`,t)},deleteTracking(e){return r.A.delete(`/tracking/${e}`)}},n={namespaced:!0,state:{trackings:[],loading:!1,error:null},getters:{trackings:e=>e.trackings,loading:e=>e.loading,error:e=>e.error},mutations:{SET_TRACKINGS(e,t){e.trackings=t},ADD_TRACKING(e,t){e.trackings.push(t)},UPDATE_TRACKING(e,t){const a=e.trackings.findIndex((e=>e._id===t._id));-1!==a&&e.trackings.splice(a,1,t)},REMOVE_TRACKING(e,t){e.trackings=e.trackings.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchTrackings({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.getTrackings(t);e("SET_TRACKINGS",a.data)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch trackings"),a}finally{e("SET_LOADING",!1)}},async createTracking({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await s.createTracking(t);return e("ADD_TRACKING",a.data),a.data}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create tracking"),a}finally{e("SET_LOADING",!1)}},async updateTracking({commit:e},{id:t,trackingData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await s.updateTracking(t,a);return e("UPDATE_TRACKING",r.data),r.data}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update tracking"),r}finally{e("SET_LOADING",!1)}},async deleteTracking({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await s.deleteTracking(t),e("REMOVE_TRACKING",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete tracking"),a}finally{e("SET_LOADING",!1)}}}}},4295:function(e,t,a){"use strict";a.r(t);var r=a(1988);const s="user",n={users:[],currentUser:JSON.parse(localStorage.getItem("currentUser"))||null,token:localStorage.getItem("token")||null,expiresIn:localStorage.getItem("expiresIn")||null},o={async register({commit:e},t){try{const a=await r.A.post(`/${s}/register`,t,{headers:{"Content-Type":"multipart/form-data"}}),{token:n,user:o,expiresIn:c}=a.data;return localStorage.setItem("token",n),localStorage.setItem("expiresIn",c),e("SET_AUTH",{token:n,user:o,expiresIn:c}),a.data}catch(a){return a.response}},async login({commit:e},t){try{const a=await r.A.post(`/${s}/login`,t);if(a.data.success){const{token:t,user:r,expiresIn:s}=a.data;localStorage.setItem("token",t),localStorage.setItem("expiresIn",s),localStorage.setItem("currentUser",JSON.stringify(r)),e("SET_AUTH",{token:t,user:r,expiresIn:s})}return a.data}catch(a){return a.response}},logout({commit:e}){localStorage.removeItem("token"),localStorage.removeItem("expiresIn"),e("CLEAR_AUTH")},async getUsers({commit:e,state:t}){try{const a=await r.A.get(`/${s}`,{headers:{Authorization:`Bearer ${t.token}`}});return e("SET_USERS",a.data.users),a.data}catch(a){return a.response}},async getUserById({commit:e,state:t},a){try{const n=await r.A.get(`/${s}/${a}`,{headers:{Authorization:`Bearer ${t.token}`}});return e("SET_CURRENT_USER",n.data.user),n.data}catch(n){return n.response}},async updateUser({commit:e},{id:t,formData:a}){try{const e=await r.A.put(`/${s}/${t}`,a,{headers:{"Content-Type":"multipart/form-data"}});return e.data}catch(n){return n.response}},async deleteUser({state:e},t){try{const a=await r.A.delete(`/${s}/${t}`,{headers:{Authorization:`Bearer ${e.token}`}});return a.data}catch(a){return a.response}},async changePassword({state:e},{id:t,currentPassword:a,newPassword:n}){try{const o=await r.A.patch(`/${s}/${t}/change-password`,{currentPassword:a,newPassword:n},{headers:{Authorization:`Bearer ${e.token}`}});return o.data}catch(o){return o.response}},async restoreSession({commit:e,state:t}){const a=localStorage.getItem("token");if(a)try{const n=await r.A.get(`/${s}/${t.currentUser.id}`,{headers:{Authorization:`Bearer ${a}`}});return n.data.success&&e("SET_AUTH",{token:a,user:n.data.user,expiresIn:localStorage.getItem("expiresIn")}),n.data}catch(n){return e("CLEAR_AUTH"),n.response}}},c={SET_USERS(e,t){e.users=t},SET_CURRENT_USER(e,t){console.log(t),e.currentUser=t},SET_AUTH(e,{token:t,user:a,expiresIn:r}){e.token=t,e.currentUser=a,e.expiresIn=r,localStorage.setItem("currentUser",JSON.stringify(a))},CLEAR_AUTH(e){e.token=null,e.currentUser=null,e.expiresIn=null,localStorage.removeItem("currentUser")}},u={isAuthenticated:e=>!!e.token,isAdmin:e=>"admin"===e.currentUser?.role,getAllUsers:e=>e.users,getCurrentUser:e=>e.currentUser,getToken:e=>e.token,getExpiresIn:e=>e.expiresIn};t["default"]={namespaced:!0,state:n,actions:o,mutations:c,getters:u}},8043:function(e,t,a){var r={"./auth.js":5554,"./courses.js":1674,"./dashboard.js":7824,"./departments.js":7990,"./documentRequest.js":8872,"./documents.js":8543,"./enrollments.js":8954,"./professors.js":474,"./reports.js":1892,"./roles.js":1426,"./schedules.js":1064,"./statuses.js":5958,"./students.js":7061,"./subjects.js":8296,"./teacherLoad.js":662,"./trackings.js":3891,"./users.js":4295};function s(e){var t=n(e);return a(t)}function n(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}s.keys=function(){return Object.keys(r)},s.resolve=n,e.exports=s,s.id=8043}},t={};function a(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}a.m=e,function(){var e=[];a.O=function(t,r,s,n){if(!r){var o=1/0;for(i=0;i<e.length;i++){r=e[i][0],s=e[i][1],n=e[i][2];for(var c=!0,u=0;u<r.length;u++)(!1&n||o>=n)&&Object.keys(a.O).every((function(e){return a.O[e](r[u])}))?r.splice(u--,1):(c=!1,n<o&&(o=n));if(c){e.splice(i--,1);var d=s();void 0!==d&&(t=d)}}return t}n=n||0;for(var i=e.length;i>0&&e[i-1][2]>n;i--)e[i]=e[i-1];e[i]=[r,s,n]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,r){return a.f[r](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/"+e+"."+{11:"e7afdded",27:"cdca5ad5",60:"9ff4a42d",93:"dcf85a84",147:"92c4d824",166:"5bd1e230",171:"3b1271d4",206:"b22ecace",237:"71c7a74d",270:"b55308a8",302:"314b0229",312:"0f054c94",330:"48ea06e3",355:"7c7b8b22",380:"f7fff233",398:"5c14814a",414:"58d7fa4b",431:"ae351f93",445:"598a7081",451:"060398f5",556:"dbb1349a",634:"6f9003c2",763:"2965593c",832:"f6e1683f",889:"203f3997",896:"39f7b29a",922:"8d91d21f",995:"a4cb4622"}[e]+".js"}}(),function(){a.miniCssF=function(e){return"css/"+e+"."+{11:"e0993199",27:"128822c0",60:"dc6e7eb6",147:"65d58444",171:"70620e42",206:"1599acae",270:"7850c2d0",302:"381b5324",330:"3cc0b253",355:"a15d9dd2",380:"eab99a1f",398:"51b84c10",414:"a1bb74fe",431:"4ab36e01",445:"90716205",451:"ed77057c",556:"42af775a",634:"8196a8a7",763:"89ca7215",889:"52cc9bde",922:"80c1b7ee"}[e]+".css"}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="client:";a.l=function(r,s,n,o){if(e[r])e[r].push(s);else{var c,u;if(void 0!==n)for(var d=document.getElementsByTagName("script"),i=0;i<d.length;i++){var l=d[i];if(l.getAttribute("src")==r||l.getAttribute("data-webpack")==t+n){c=l;break}}c||(u=!0,c=document.createElement("script"),c.charset="utf-8",c.timeout=120,a.nc&&c.setAttribute("nonce",a.nc),c.setAttribute("data-webpack",t+n),c.src=r),e[r]=[s];var E=function(t,a){c.onerror=c.onload=null,clearTimeout(R);var s=e[r];if(delete e[r],c.parentNode&&c.parentNode.removeChild(c),s&&s.forEach((function(e){return e(a)})),t)return t(a)},R=setTimeout(E.bind(null,void 0,{type:"timeout",target:c}),12e4);c.onerror=E.bind(null,c.onerror),c.onload=E.bind(null,c.onload),u&&document.head.appendChild(c)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){a.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,t,r,s,n){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",a.nc&&(o.nonce=a.nc);var c=function(a){if(o.onerror=o.onload=null,"load"===a.type)s();else{var r=a&&a.type,c=a&&a.target&&a.target.href||t,u=new Error("Loading CSS chunk "+e+" failed.\n("+r+": "+c+")");u.name="ChunkLoadError",u.code="CSS_CHUNK_LOAD_FAILED",u.type=r,u.request=c,o.parentNode&&o.parentNode.removeChild(o),n(u)}};return o.onerror=o.onload=c,o.href=t,r?r.parentNode.insertBefore(o,r.nextSibling):document.head.appendChild(o),o},t=function(e,t){for(var a=document.getElementsByTagName("link"),r=0;r<a.length;r++){var s=a[r],n=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(n===e||n===t))return s}var o=document.getElementsByTagName("style");for(r=0;r<o.length;r++){s=o[r],n=s.getAttribute("data-href");if(n===e||n===t)return s}},r=function(r){return new Promise((function(s,n){var o=a.miniCssF(r),c=a.p+o;if(t(o,c))return s();e(r,c,null,s,n)}))},s={524:0};a.f.miniCss=function(e,t){var a={11:1,27:1,60:1,147:1,171:1,206:1,270:1,302:1,330:1,355:1,380:1,398:1,414:1,431:1,445:1,451:1,556:1,634:1,763:1,889:1,922:1};s[e]?t.push(s[e]):0!==s[e]&&a[e]&&t.push(s[e]=r(e).then((function(){s[e]=0}),(function(t){throw delete s[e],t})))}}}(),function(){var e={524:0};a.f.j=function(t,r){var s=a.o(e,t)?e[t]:void 0;if(0!==s)if(s)r.push(s[2]);else if(451!=t){var n=new Promise((function(a,r){s=e[t]=[a,r]}));r.push(s[2]=n);var o=a.p+a.u(t),c=new Error,u=function(r){if(a.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var n=r&&("load"===r.type?"missing":r.type),o=r&&r.target&&r.target.src;c.message="Loading chunk "+t+" failed.\n("+n+": "+o+")",c.name="ChunkLoadError",c.type=n,c.request=o,s[1](c)}};a.l(o,u,"chunk-"+t,t)}else e[t]=0},a.O.j=function(t){return 0===e[t]};var t=function(t,r){var s,n,o=r[0],c=r[1],u=r[2],d=0;if(o.some((function(t){return 0!==e[t]}))){for(s in c)a.o(c,s)&&(a.m[s]=c[s]);if(u)var i=u(a)}for(t&&t(r);d<o.length;d++)n=o[d],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(i)},r=self["webpackChunkclient"]=self["webpackChunkclient"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=a.O(void 0,[504],(function(){return a(9261)}));r=a.O(r)})();
//# sourceMappingURL=app.09293350.js.map